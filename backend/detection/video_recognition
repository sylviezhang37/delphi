import numpy as np
import os
from google import genai
from typing import Dict, Any, Union
import dotenv
import logging

# parameter could be wrong; CHECK!
def get_video_info(Video: list(str)) -> Dict[str, str]:
  if './env'.exists():
    dotenv.load_dotenv(dotenv_path='./env')
  else:
    logging.info("No backend/./env file found; continuing without loading local env")
  
  apikey = os.getenv('GOOGLE_API_KEY')
  client = genai.Client(api_key=apikey)

  # could be wrong; depends on how video is sent
  video_file_name = Video+'.mp4' # origanally had it like this: video_file_name = "./video.mp4"
  video_bytes = open(video_file_name, 'rb').read()

  response = client.models.generate_content(
    model='models/gemini-2.5-flash',
    contents=types.Content(
        parts=[
            types.Part(
                inline_data=types.Blob(data=video_bytes, mime_type='video/mp4')
            ),
            types.Part(text="""
            Explain the most important contents like you're explaining it to a blind person, 
            imagine this will be read aloud to them (but do not mention this); 
            be considerate of their disability, considering tone and length. Section
            it in parts, an overview (specifically titled: Overview) and then a subsection
            of said overview, but no more subsections that that. A depth of 1 if you
            can picture it (keep the overview under 25 words and the single subsection, named Details, under 70 words, this is 
            an absolute must!) 
            """),
            types.Config={
                "response_mime_type": "application/json"
            },
        ]
    ),
    config=types.GenerateContentConfig(
        response_mime_type="application/json"
    )
  )

  return response.text


